

buildscript {
    repositories {
        mavenCentral()
        maven {
            url kotlinCompilerRepo
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$buildKotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-native-gradle-plugin:$gradlePluginVersion"
    }

}

repositories {
    maven {
        url kotlinCompilerRepo
    }
}

//TODO: property
def jvmWarmup = 10000
def nativeWarmup = 10

ext."konan.home" = distDir

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'konan'

checkKonanCompiler.dependsOn ':dist'

konanArtifacts {
    program('Ring') {
        srcDir 'src/main/kotlin'
        srcDir 'src/main/kotlin-native'
        enableOptimizations true
    }
}

sourceSets {
    main.kotlin.srcDir 'src/main/kotlin'
    main.kotlin.srcDir 'src/main/kotlin-jvm'
}

compileKotlin {
    kotlinOptions.suppressWarnings = true
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$buildKotlinVersion"
}

task jvmRun(type: JavaExec) {
    dependsOn 'build'
    def output = new ByteArrayOutputStream()
    classpath sourceSets.main.runtimeClasspath
    main = "MainKt"
    args "$jvmWarmup"
    standardOutput = output
    doLast {
        dumpReport('jvmReport', output)
    }
}

private void dumpReport(String name, ByteArrayOutputStream output) {
    new File("${buildDir.absolutePath}/${name}.txt").withOutputStream {
        it.write(output.toByteArray())
    }
}

task konanRun(type: Exec) {
    dependsOn 'build'
    def output = new ByteArrayOutputStream()
    commandLine konanArtifacts.Ring.getByTarget('host').artifact.absolutePath, "$nativeWarmup"
    standardOutput = output
    doLast {
        dumpReport('konanReport', output)
    }
}

startScripts{
    setEnabled(false)
}

task bench(type:DefaultTask) {
    dependsOn jvmRun
    dependsOn konanRun

    doLast {
        compareWithBaseline
    }
}

task compareWithBaseline(type: JavaExec) {
    dependsOn 'build'
    classpath sourceSets.main.runtimeClasspath
    main = "ComparisonKt"
    args "build/jvmReport.txt", "build/konanReport.txt"
}